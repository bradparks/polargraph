#!/usr/bin/perl
# Translate the vectors from a PJL file into gcode for the polargraph.
# There is probably a better way to do this.
# origin is at l1=2032 l2=2032 
# separation between the two is 2.5m
use warnings;
use strict;
use Getopt::Long qw/:config no_ignore_case/;

my $usage = <<"";
$0: Plot a set of vectors on the polargraph.
Options:
    -H | --home       Send the set-home command in the gcode
    -w | --width N    Separation between the pulleys in mm
    -l | --length N   Length of the two strings at the home position in mm
    -f | --feed N     Feed rate for the motors in mm/sec
    -n | --step N     Interpolation step size for straight lines in mm
    -M | --motors-on  Leave the motors on after the plot (default off)
    --offset x,y       Shift the origin to x,y in mm
    --scale N         Scale the plot by this factor

my $width = 2501.9;
my $home_length = 2032.0;
my $default_feed = 2000;
my $step_size = 40;
my $motor_on = 0;
my $send_home = 0;
my $offset_x = 0;
my $offset_y = 0;

my $scale = 1;

GetOptions(
	"H|home+"	=> \$send_home,
	"w|width=f"	=> \$width,
	"l|length=f"	=> \$home_length,
	"f|feed=f"	=> \$default_feed,
	"n|step=f"	=> \$step_size,
	"x|offset-x=f"	=> \$offset_x,
	"y|offset-y=f"	=> \$offset_y,
	"scale=f"	=> \$scale,
	"h|?|help"	=> sub { print $usage; exit 0; }
) or die $usage;

print "G92 X$home_length Y$home_length\n"
	if $send_home;

while(<>)
{
	chomp;
	my @points = split /,/;
	my @old;

	for(my $i = 2 ; $i < @points ; $i+=2)
	{
		my ($x,$y) = @points[$i,$i+1];
		my $feed = $default_feed;
		if ($x =~ s/^PU//)
		{
			$feed = 5000;
			@old = ();
		}

		$x =~ s/^PD//;

		if (@old)
		{
			goxy_step(@old, $x,$y, $feed);
		} else {
			goxy($x,$y, $feed);
		}
		@old = ($x,$y);
	}
}


sub goxy_step
{
	my ($x0,$y0,$x1,$y1,$feed) = @_;

	# iterate from x0,y0 to x1,y1
	my $dx = $x1 - $x0;
	my $dy = $y1 - $y0;
	my $dist = sqrt($dx*$dx+$dy*$dy);

	my $steps = int($dist/$step_size);

	for(my $i = 0 ; $i < $steps ; $i++)
	{
		$x0 += $dx / $steps;
		$y0 += $dy / $steps;
		goxy($x0,$y0,$feed);
	}

	goxy($x1,$y1,$feed);
}


sub goxy
{
	# convert from pts to something
	my $x = shift;
	my $y = shift;
	my $feed = shift || 1000;

	# 0.06 is something to do with HPGL weirdness
	$x = $x * $scale * 0.06 + $offset_x;
	$y = $y * $scale * 0.06 + $offset_y;
	
	my $l1 = sqrt($x*$x + $y*$y);
	my $l2 = sqrt(($width-$x)*($width-$x) + $y*$y);

	printf STDERR "%.3f %.3f -> %.3f %.3f\n", $x, $y, $l1, $l2;
	printf "G1 X%.3f Y%.3f F%d\n", $l1, $l2, $feed;
}

# Turn off the motors if requested
print "M18\n" unless $motor_on;
